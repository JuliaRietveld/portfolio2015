@mixin backImage(
  $image,
  $grDir: to bottom,
  $opStart: 0,
  $opEnd: 0,
  $bgPos: center center
  ) {
  background: linear-gradient(
    $grDir,
    rgba(0,0,0, $opStart),
    rgba(0,0,0, $opEnd)
  ),url($image);
  background-repeat: no-repeat;
  background-position: $bgPos; 
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
} //backImage

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  } //before, after
  &:after {
    clear: both;
  } //after
} //clearfix

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px: ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px: append($px, $value);
      $rem: append($rem, $value);
    } @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px: append($px, $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px: append($px, ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}
@mixin text-indent{
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

@mixin valign {
  position: relative;
  top: 50%;
  @include translateY(-50%);
}

@mixin debug($border, $bg) {
  outline: 1px solid $border;
  background: $bg;
}